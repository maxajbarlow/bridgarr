services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: linkarr-postgres
    environment:
      POSTGRES_DB: linkarr
      POSTGRES_USER: linkarr
      POSTGRES_PASSWORD: linkarr_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U linkarr"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: linkarr-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./linkarr-backend
      dockerfile: Dockerfile
    container_name: linkarr-backend
    ports:
      - "8000:8000"
    env_file:
      - ./linkarr-backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Worker (Background Tasks)
  celery-worker:
    build:
      context: ./linkarr-backend
      dockerfile: Dockerfile
    container_name: linkarr-celery-worker
    command: celery -A app.tasks.celery_app worker --loglevel=info
    env_file:
      - ./linkarr-backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery Beat (Scheduled Tasks)
  celery-beat:
    build:
      context: ./linkarr-backend
      dockerfile: Dockerfile
    container_name: linkarr-celery-beat
    command: celery -A app.tasks.celery_app beat --loglevel=info
    env_file:
      - ./linkarr-backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Web Management Frontend
  web:
    build:
      context: ./linkarr-web
      dockerfile: Dockerfile
    container_name: linkarr-web
    ports:
      - "3002:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://YOUR_SERVER_IP:8000
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
